package test

object test3 {
    def product(f: Int => Int)(a: Int, b: Int): Int =
        if (a > b) 1
        else f(a) * product(f)(a + 1, b)

    product(x => x * x)(3, 4);

    def factorial(n: Int) = product(x => x)(1, n)

    factorial(3)

    def abs(x: Double) = if (x < 0) -x else x

    def isCloseEnough(a: Double, b: Double) =
        if (abs(a - b) / b < 0.0001) true else false

    def fixedPoint(f: Double => Double)(firstPoint: Int) = {
        def interation(guess: Double) = {
            val nextGuess = f(guess)
            if (isCloseEnough(guess, nextGuess)) guess
            else interation(nextGuess)
        }
    }

}